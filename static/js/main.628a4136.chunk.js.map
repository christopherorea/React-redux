{"version":3,"sources":["components/songList.js","actions/index.js","components/songDetail.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","songs","selectSong","song","type","payload","className","map","key","title","onClick","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"wJAgCeA,eAJQ,SAAAC,GACrB,MAAO,CAAEC,MAAOD,EAAMC,SAGc,CAAEC,WChCd,SAACC,GACvB,MAAM,CACFC,KAAM,gBACNC,QAASF,KD6BFJ,EA5BE,SAAC,GAEX,IADLE,EACI,EADJA,MAAOC,EACH,EADGA,WAoBP,OAAO,yBAAKI,UAAU,mBAjBbL,EAAMM,KAAI,SAACJ,GAChB,OACE,yBAAKG,UAAU,OAAOE,IAAKL,EAAKM,OAC9B,yBAAKH,UAAU,yBACb,4BACEA,UAAU,oBACVI,QAAS,kBAAMR,EAAWC,KAF5B,WAOF,yBAAKG,UAAU,WAAWH,EAAKM,eEK1BV,eAJS,SAACC,GACvB,MAAO,CAAEG,KAAMH,EAAMW,gBAGRZ,EArBI,SAAC,GAAY,IAAXI,EAAU,EAAVA,KACnB,OAAIA,EAIF,6BACE,4CACA,qCACUA,EAAKM,MACb,6BAFF,aAGaN,EAAKS,WARb,iDCcIC,EAfH,WACV,OACE,yBAAKP,UAAU,qBACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,qBACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,sBACb,kBAAC,EAAD,UCKKQ,cAAgB,CAC3Bb,MAhBiB,WACjB,MAAM,CACF,CAACQ,MAAQ,UAAWG,SAAU,QAC9B,CAACH,MAAQ,UAAWG,SAAU,QAC9B,CAACH,MAAQ,UAAWG,SAAU,UAalCD,aATwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMI,EAAW,uCACvD,MAAmB,kBAAhBA,EAAOX,KACCW,EAAOV,QAEXM,KCNXK,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOC,YAAYC,IACzB,kBAAC,EAAD,OAEJC,SAASC,cAAc,W","file":"static/js/main.628a4136.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { selectSong } from '../actions';\n\nconst SongList = ({ \n  songs, selectSong,\n}) => {\n  const renderList = () => {\n    return songs.map((song) => {\n      return (\n        <div className=\"item\" key={song.title}>\n          <div className=\"right floated content\">\n            <button\n              className=\"ui button primary\"\n              onClick={() => selectSong(song)}\n            >\n              Select\n            </button>\n          </div>\n          <div className=\"content\">{song.title}</div>\n        </div>\n      );\n    });\n  }\n\n  return <div className=\"ui divided list\">{renderList()}</div>\n};\n\nconst mapStateToProp = state => {\n  return { songs: state.songs };\n};\n\nexport default connect(mapStateToProp,{ selectSong })(SongList);\n","export const selectSong = (song)=>{\n    return{\n        type: 'SONG_SELECTED',\n        payload: song,\n    };\n};","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst SongDetail = ({song}) => {\n  if(!song){\n    return <div>Select a Song</div>;\n  }\n  return (\n    <div>\n      <h3>Detauls for:</h3>\n      <p>\n        Title: {song.title}\n        <br/>\n        Duration: {song.duration}\n      </p>\n      \n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { song: state.selectedSong }\n};\n\nexport default connect(mapStateToProps)(SongDetail);\n","import React from 'react';\nimport SongList from './songList';\nimport SongDetail from './songDetail';\n\nconst App = () => {\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ui row\">\n        <div className=\"column eight wide\">\n          <SongList />\n        </div>\n        <div className=\"columng eight wide\">\n          <SongDetail />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n    return[\n        {title : 'Nanana1', duration: '1:00'},\n        {title : 'Nanana2', duration: '2:00'},\n        {title : 'Nanana3', duration: '2:01'},\n    ]\n};\n\nconst selectedSongReducer = (selectedSong=null, action) => {\n    if(action.type === 'SONG_SELECTED'){\n        return action.payload;\n    }\n    return selectedSong;\n};\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer,\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>, \n    document.querySelector('#root')\n);"],"sourceRoot":""}